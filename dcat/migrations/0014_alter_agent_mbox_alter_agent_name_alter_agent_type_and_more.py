# Generated by Django 5.0 on 2024-01-07 14:59

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):
    dependencies = [
        ("dcat", "0013_alter_catalog_licence"),
    ]

    operations = [
        migrations.AlterField(
            model_name="agent",
            name="mbox",
            field=models.EmailField(
                blank=True,
                help_text="An email address of the Agent.",
                max_length=254,
                null=True,
            ),
        ),
        migrations.AlterField(
            model_name="agent",
            name="name",
            field=models.CharField(help_text="A name of the Agent.", max_length=255),
        ),
        migrations.AlterField(
            model_name="agent",
            name="type",
            field=models.CharField(
                blank=True,
                help_text="A type of the agent that makes the Catalogue or Dataset available.",
                max_length=20,
            ),
        ),
        migrations.AlterField(
            model_name="catalog",
            name="description",
            field=models.TextField(help_text="A free-text account of the Catalogue."),
        ),
        migrations.AlterField(
            model_name="catalog",
            name="homepage",
            field=models.URLField(
                blank=True,
                help_text="A web page that acts as the main page for the Catalogue.",
            ),
        ),
        migrations.AlterField(
            model_name="catalog",
            name="licence",
            field=models.ForeignKey(
                blank=True,
                help_text="A licence under which the Catalogue can be used or reused.",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="dcat.licencedocument",
            ),
        ),
        migrations.AlterField(
            model_name="catalog",
            name="publisher",
            field=models.ForeignKey(
                help_text="An entity (organisation) responsible for making the Catalogue available.",
                on_delete=django.db.models.deletion.CASCADE,
                to="dcat.agent",
            ),
        ),
        migrations.AlterField(
            model_name="catalog",
            name="themes",
            field=models.ManyToManyField(
                blank=True,
                help_text="A knowledge organization system used to classify the Catalogue's Datasets.",
                to="dcat.datatheme",
            ),
        ),
        migrations.AlterField(
            model_name="catalog",
            name="title",
            field=models.CharField(
                help_text="A name given to the Catalogue.", max_length=255
            ),
        ),
        migrations.AlterField(
            model_name="dataservice",
            name="description",
            field=models.TextField(
                blank=True, help_text="A free-text account of the DataService."
            ),
        ),
        migrations.AlterField(
            model_name="dataservice",
            name="endpoint_url",
            field=models.URLField(
                help_text="The root location or primary endpoint of the service (an IRI)."
            ),
        ),
        migrations.AlterField(
            model_name="dataservice",
            name="format",
            field=models.ManyToManyField(
                blank=True,
                help_text="The structure that can be returned by querying the endpointURL.",
                to="dcat.mediatype",
            ),
        ),
        migrations.AlterField(
            model_name="dataservice",
            name="licence",
            field=models.ForeignKey(
                help_text="A licence under which the Data service is made available.",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="dcat.licencedocument",
            ),
        ),
        migrations.AlterField(
            model_name="dataservice",
            name="title",
            field=models.CharField(
                help_text="A name given to the DataService.", max_length=255
            ),
        ),
        migrations.AlterField(
            model_name="dataset",
            name="description",
            field=models.TextField(
                blank=True, help_text="A free-text account of the Dataset."
            ),
        ),
        migrations.AlterField(
            model_name="dataset",
            name="keywords",
            field=models.ManyToManyField(
                blank=True,
                help_text="A keyword or tag describing the Dataset.",
                to="dcat.keyword",
            ),
        ),
        migrations.AlterField(
            model_name="dataset",
            name="landing_page",
            field=models.URLField(
                blank=True,
                help_text="A web page that provides access to the Dataset, its Distributions and/or additional information. It is intended to point to a landing page at the original data provider, not to a page on a site of a third party, such as an aggregator.",
            ),
        ),
        migrations.AlterField(
            model_name="dataset",
            name="modified",
            field=models.DateField(
                blank=True,
                help_text="The most recent date on which the Dataset was changed or modified.",
                null=True,
            ),
        ),
        migrations.AlterField(
            model_name="dataset",
            name="publisher",
            field=models.ForeignKey(
                help_text="An entity (organisation) responsible for making the Dataset available.",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="dcat.agent",
            ),
        ),
        migrations.AlterField(
            model_name="dataset",
            name="themes",
            field=models.ManyToManyField(
                blank=True,
                help_text="A category of the Dataset. A Dataset may be associated with multiple themes.",
                to="dcat.datatheme",
            ),
        ),
        migrations.AlterField(
            model_name="dataset",
            name="title",
            field=models.CharField(
                help_text="A name given to the Dataset.", max_length=255
            ),
        ),
        migrations.AlterField(
            model_name="distribution",
            name="checksum",
            field=models.OneToOneField(
                blank=True,
                help_text="A mechanism that can be used to verify that the contents of a distribution have not changed. The checksum is related to the download_url.",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="dcat.checksum",
            ),
        ),
        migrations.AlterField(
            model_name="distribution",
            name="description",
            field=models.TextField(
                blank=True, help_text="A free-text account of the Distribution."
            ),
        ),
        migrations.AlterField(
            model_name="distribution",
            name="external_access_url",
            field=models.URLField(
                blank=True,
                default="",
                help_text="A URL that gives access to a Distribution of the Dataset. The resource at the access URL may contain information about how to get the Dataset.",
            ),
        ),
        migrations.AlterField(
            model_name="distribution",
            name="external_download_url",
            field=models.URLField(
                blank=True,
                default="",
                help_text="A URL that is a direct link to a downloadable file in a given format.",
            ),
        ),
        migrations.AlterField(
            model_name="distribution",
            name="format",
            field=models.ForeignKey(
                blank=True,
                help_text="The file format of the Distribution.",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="dcat.mediatype",
            ),
        ),
        migrations.AlterField(
            model_name="distribution",
            name="licence",
            field=models.ForeignKey(
                blank=True,
                help_text="A licence under which the Distribution is made available. ",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="dcat.licencedocument",
            ),
        ),
        migrations.AlterField(
            model_name="distribution",
            name="title",
            field=models.CharField(
                blank=True,
                help_text="A name given to the Distribution.",
                max_length=255,
            ),
        ),
    ]
